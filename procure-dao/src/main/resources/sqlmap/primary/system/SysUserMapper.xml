<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.wangfeng.procure.dao.primary.system.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.github.wangfeng.procure.common.po.entity.primary.SysUserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>


  <resultMap id="BaseResultMap2" type="com.github.wangfeng.procure.common.po.entity.primary.SysUserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <association property="dept"    column="dept_id"  resultMap="BaseResultMap_DEPT" />
    <collection  property="roles"   javaType="java.util.List"       resultMap="BaseResultMap_ROLE" />
  </resultMap>


  <resultMap id="BaseResultMap_ROLE" type="com.github.wangfeng.procure.common.po.entity.primary.SysRoleDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 13:38:48 CST 2019.
    -->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="role_sort" jdbcType="INTEGER" property="roleSort" />
    <result column="data_scope" jdbcType="CHAR" property="dataScope" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>

  <resultMap id="BaseResultMap_DEPT" type="com.github.wangfeng.procure.common.po.entity.primary.SysDeptDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 13:27:19 CST 2019.
    -->
    <id column="dept_id" jdbcType="BIGINT" property="deptId"/>
    <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
    <result column="ancestors" jdbcType="VARCHAR" property="ancestors"/>
    <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
    <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
    <result column="leader" jdbcType="VARCHAR" property="leader"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="status" jdbcType="INTEGER" property="status"/>
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
    <result column="remark" jdbcType="VARCHAR" property="remark"/>
  </resultMap>



  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    `user_id`, `dept_id`, `login_name`, `user_name`, `user_type`, `email`, `mobile`,
    `sex`, `avatar`, `password`, `salt`, `login_ip`, `login_date`, `status`, `create_date`, 
    `create_by`, `update_date`, `update_by`, `remark`
  </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from `sys_user`
    where `user_id` = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    delete from `sys_user`
    where `user_id` = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.github.wangfeng.procure.common.po.entity.primary.SysUserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    insert into `sys_user` (`user_id`, `dept_id`, `login_name`, 
      `user_name`, `user_type`, `email`,
      `mobile`, `sex`, `avatar`, `password`, 
      `salt`, `login_ip`, `login_date`, 
      `status`, `create_date`, `create_by`, 
      `update_date`, `update_by`, `remark`
      )
    values (#{userId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, 
      #{userame,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
      #{mobile,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.wangfeng.procure.common.po.entity.primary.SysUserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    insert into `sys_user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        `user_id`,
      </if>
      <if test="deptId != null">
        `dept_id`,
      </if>
      <if test="loginName != null">
        `login_name`,
      </if>
      <if test="userName != null">
        `user_name`,
      </if>
      <if test="userType != null">
        `user_type`,
      </if>
      <if test="email != null">
        `email`,
      </if>
      <if test="mobile != null">
        `mobile`,
      </if>
      <if test="sex != null">
        `sex`,
      </if>
      <if test="avatar != null">
        `avatar`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        `salt`,
      </if>
      <if test="loginIp != null">
        `login_ip`,
      </if>
      <if test="loginDate != null">
        `login_date`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createDate != null">
        `create_date`,
      </if>
      <if test="createBy != null">
        `create_by`,
      </if>
      <if test="updateDate != null">
        `update_date`,
      </if>
      <if test="updateBy != null">
        `update_by`,
      </if>
      <if test="remark != null">
        `remark`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.wangfeng.procure.common.po.entity.primary.SysUserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    update `sys_user`
    <set>
      <if test="deptId != null">
        `dept_id` = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="loginName != null">
        `login_name` = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        `user_name` = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        `user_type` = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        `email` = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        `mobile` = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        `sex` = #{sex,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        `avatar` = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        `salt` = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        `login_ip` = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        `login_date` = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        `create_date` = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        `create_by` = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        `update_date` = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        `update_by` = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        `remark` = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where `user_id` = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.wangfeng.procure.common.po.entity.primary.SysUserDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 28 15:03:09 CST 2019.
    -->
    update `sys_user`
    set `dept_id` = #{deptId,jdbcType=BIGINT},
      `login_name` = #{loginName,jdbcType=VARCHAR},
      `user_name` = #{userName,jdbcType=VARCHAR},
      `user_type` = #{userType,jdbcType=VARCHAR},
      `email` = #{email,jdbcType=VARCHAR},
      `mobile` = #{mobile,jdbcType=VARCHAR},
      `sex` = #{sex,jdbcType=CHAR},
      `avatar` = #{avatar,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `salt` = #{salt,jdbcType=VARCHAR},
      `login_ip` = #{loginIp,jdbcType=VARCHAR},
      `login_date` = #{loginDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      `create_date` = #{createDate,jdbcType=TIMESTAMP},
      `create_by` = #{createBy,jdbcType=VARCHAR},
      `update_date` = #{updateDate,jdbcType=TIMESTAMP},
      `update_by` = #{updateBy,jdbcType=VARCHAR},
      `remark` = #{remark,jdbcType=VARCHAR}
    where `user_id` = #{userId,jdbcType=BIGINT}
  </update>


  <sql id="selectUserVo">
        select  u.user_id, u.dept_id, u.login_name, u.user_name, u.email, u.avatar, u.mobile, u.sex, u.password, u.salt, u.status,  u.login_ip, u.login_date, u.create_date, u.remark,
       		    d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
       		    r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
		from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
    </sql>

  <select id="selectUserList" resultMap="BaseResultMap2">
    select u.user_id, u.dept_id, u.login_name, u.user_name, u.email, u.avatar, u.mobile, u.password, u.sex, u.salt, u.status,  u.login_ip, u.login_date, u.create_by, u.create_date, u.remark, d.dept_name, d.leader from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    where u.status = '0'
    <if test="loginName != null and loginName != ''">
      AND u.login_name like concat('%', #{loginName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND u.status = #{status}
    </if>
    <if test="mobile != null and mobile != ''">
      AND u.mobile like concat('%', #{mobile}, '%')
    </if>
    <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
      AND date_format(u.create_date,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
    </if>
    <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
      AND date_format(u.create_date,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
    </if>
    <if test="deptId != null and deptId != 0">
      AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{deptId},ancestors) ))
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectAllocatedList" resultMap="BaseResultMap">
    select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.email, u.avatar, u.mobile, u.status, u.create_date
    from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    left join sys_user_role ur on u.user_id = ur.user_id
    left join sys_role r on r.role_id = ur.role_id
    where u.status = '0' and r.role_id = #{roleId}
    <if test="loginName != null and loginName != ''">
      AND u.login_name like concat('%', #{loginName}, '%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND u.mobile like concat('%', #{mobile}, '%')
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectUnallocatedList"  resultMap="BaseResultMap">
    select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.email, u.avatar, u.mobile, u.status, u.create_date
    from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    left join sys_user_role ur on u.user_id = ur.user_id
    left join sys_role r on r.role_id = ur.role_id
    where u.status = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
    <if test="loginName != null and loginName != ''">
      AND u.login_name like concat('%', #{loginName}, '%')
    </if>
    <if test="mobile != null and mobile != ''">
      AND u.mobile like concat('%', #{mobile}, '%')
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectUserByLoginName"  resultMap="BaseResultMap2">
    <include refid="selectUserVo"/>
    where u.login_name = #{userName}
  </select>

  <select id="selectUserByPhoneNumber" resultMap="BaseResultMap2">
    <include refid="selectUserVo"/>
    where u.mobile = #{mobile}
  </select>

  <select id="selectUserByEmail"  resultMap="BaseResultMap2">
    <include refid="selectUserVo"/>
    where u.email = #{email}
  </select>

  <select id="checkLoginNameUnique" resultType="int">
		select count(1) from sys_user where login_name=#{loginName}
	</select>

  <select id="checkPhoneUnique"  resultMap="BaseResultMap">
		select user_id, mobile from sys_user where mobile=#{mobile}
	</select>

  <select id="checkEmailUnique" resultMap="BaseResultMap">
		select user_id, email from sys_user where email=#{email}
	</select>

  <select id="selectUserById"  resultMap="BaseResultMap2">
    <include refid="selectUserVo"/>
    where u.user_id = #{userId}
  </select>

  <delete id="deleteUserById" parameterType="long">
 		delete from sys_user where user_id = #{userId}
 	</delete>

  <delete id="deleteUserByIds" parameterType="long">
    update sys_user set status = '1' where user_id in
    <foreach collection="array" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>

  <update id="updateUser" >
    update sys_user
    <set>
      <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
      <if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
      <if test="userName != null and userName != ''">user_name = #{userName},</if>
      <if test="email != null and email != ''">email = #{email},</if>
      <if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
      <if test="sex != null and sex != ''">sex = #{sex},</if>
      <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
      <if test="password != null and password != ''">password = #{password},</if>
      <if test="salt != null and salt != ''">salt = #{salt},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
      <if test="loginDate != null">login_date = #{loginDate},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      <if test="remark != null">remark = #{remark},</if>
      update_date = sysdate()
    </set>
    where user_id = #{userId}
  </update>

  <insert id="insertUser"  useGeneratedKeys="true" keyProperty="userId">
    insert into sys_user(
    <if test="userId != null and userId != 0">user_id,</if>
    <if test="deptId != null and deptId != 0">dept_id,</if>
    <if test="loginName != null and loginName != ''">login_name,</if>
    <if test="userName != null and userName != ''">user_name,</if>
    <if test="email != null and email != ''">email,</if>
    <if test="avatar != null and avatar != ''">avatar,</if>
    <if test="mobile != null and mobile != ''">mobile,</if>
    <if test="sex != null and sex != ''">sex,</if>
    <if test="password != null and password != ''">password,</if>
    <if test="salt != null and salt != ''">salt,</if>
    <if test="status != null and status != ''">status,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    <if test="remark != null and remark != ''">remark,</if>
    create_date
    )values(
    <if test="userId != null and userId != ''">#{userId},</if>
    <if test="deptId != null and deptId != ''">#{deptId},</if>
    <if test="loginName != null and loginName != ''">#{loginName},</if>
    <if test="userName != null and userName != ''">#{userName},</if>
    <if test="email != null and email != ''">#{email},</if>
    <if test="avatar != null and avatar != ''">#{avatar},</if>
    <if test="mobile != null and mobile != ''">#{mobile},</if>
    <if test="sex != null and sex != ''">#{sex},</if>
    <if test="password != null and password != ''">#{password},</if>
    <if test="salt != null and salt != ''">#{salt},</if>
    <if test="status != null and status != ''">#{status},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    sysdate()
    )
  </insert>
</mapper>